#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="Conosud")]
public partial class ConosudDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertSegMenu(SegMenu instance);
  partial void UpdateSegMenu(SegMenu instance);
  partial void DeleteSegMenu(SegMenu instance);
  partial void InsertSegRol(SegRol instance);
  partial void UpdateSegRol(SegRol instance);
  partial void DeleteSegRol(SegRol instance);
  partial void InsertSegRolMenu(SegRolMenu instance);
  partial void UpdateSegRolMenu(SegRolMenu instance);
  partial void DeleteSegRolMenu(SegRolMenu instance);
  partial void InsertSegUsuario(SegUsuario instance);
  partial void UpdateSegUsuario(SegUsuario instance);
  partial void DeleteSegUsuario(SegUsuario instance);
  partial void InsertSegUsuarioRol(SegUsuarioRol instance);
  partial void UpdateSegUsuarioRol(SegUsuarioRol instance);
  partial void DeleteSegUsuarioRol(SegUsuarioRol instance);
  partial void InsertRolesPlanilla(RolesPlanilla instance);
  partial void UpdateRolesPlanilla(RolesPlanilla instance);
  partial void DeleteRolesPlanilla(RolesPlanilla instance);
  partial void InsertContrato(Contrato instance);
  partial void UpdateContrato(Contrato instance);
  partial void DeleteContrato(Contrato instance);
  partial void InsertContratoEmpresa(ContratoEmpresa instance);
  partial void UpdateContratoEmpresa(ContratoEmpresa instance);
  partial void DeleteContratoEmpresa(ContratoEmpresa instance);
  partial void InsertEmpresa(Empresa instance);
  partial void UpdateEmpresa(Empresa instance);
  partial void DeleteEmpresa(Empresa instance);
  partial void InsertCabeceraHojasDeRuta(CabeceraHojasDeRuta instance);
  partial void UpdateCabeceraHojasDeRuta(CabeceraHojasDeRuta instance);
  partial void DeleteCabeceraHojasDeRuta(CabeceraHojasDeRuta instance);
  partial void InsertHojasDeRuta(HojasDeRuta instance);
  partial void UpdateHojasDeRuta(HojasDeRuta instance);
  partial void DeleteHojasDeRuta(HojasDeRuta instance);
  partial void InsertPlantilla(Plantilla instance);
  partial void UpdatePlantilla(Plantilla instance);
  partial void DeletePlantilla(Plantilla instance);
  partial void InsertClasificacion(Clasificacion instance);
  partial void UpdateClasificacion(Clasificacion instance);
  partial void DeleteClasificacion(Clasificacion instance);
  #endregion
	
	public ConosudDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConosudConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ConosudDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ConosudDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ConosudDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ConosudDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<SegMenu> SegMenus
	{
		get
		{
			return this.GetTable<SegMenu>();
		}
	}
	
	public System.Data.Linq.Table<SegRol> SegRols
	{
		get
		{
			return this.GetTable<SegRol>();
		}
	}
	
	public System.Data.Linq.Table<SegRolMenu> SegRolMenus
	{
		get
		{
			return this.GetTable<SegRolMenu>();
		}
	}
	
	public System.Data.Linq.Table<SegUsuario> SegUsuarios
	{
		get
		{
			return this.GetTable<SegUsuario>();
		}
	}
	
	public System.Data.Linq.Table<SegUsuarioRol> SegUsuarioRols
	{
		get
		{
			return this.GetTable<SegUsuarioRol>();
		}
	}
	
	public System.Data.Linq.Table<RolesPlanilla> RolesPlanillas
	{
		get
		{
			return this.GetTable<RolesPlanilla>();
		}
	}
	
	public System.Data.Linq.Table<Contrato> Contratos
	{
		get
		{
			return this.GetTable<Contrato>();
		}
	}
	
	public System.Data.Linq.Table<ContratoEmpresa> ContratoEmpresas
	{
		get
		{
			return this.GetTable<ContratoEmpresa>();
		}
	}
	
	public System.Data.Linq.Table<Empresa> Empresas
	{
		get
		{
			return this.GetTable<Empresa>();
		}
	}
	
	public System.Data.Linq.Table<CabeceraHojasDeRuta> CabeceraHojasDeRutas
	{
		get
		{
			return this.GetTable<CabeceraHojasDeRuta>();
		}
	}
	
	public System.Data.Linq.Table<HojasDeRuta> HojasDeRutas
	{
		get
		{
			return this.GetTable<HojasDeRuta>();
		}
	}
	
	public System.Data.Linq.Table<Plantilla> Plantillas
	{
		get
		{
			return this.GetTable<Plantilla>();
		}
	}
	
	public System.Data.Linq.Table<Clasificacion> Clasificacions
	{
		get
		{
			return this.GetTable<Clasificacion>();
		}
	}
}

[Table(Name="dbo.SegMenu")]
public partial class SegMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _IdSegMenu;
	
	private string _Descripcion;
	
	private System.Nullable<long> _PadreId;
	
	private int _Posicion;
	
	private string _Icono;
	
	private string _Url;
	
	private string _Target;
	
	private EntitySet<SegMenu> _SegMenus;
	
	private EntitySet<SegRolMenu> _SegRolMenus;
	
	private EntityRef<SegMenu> _SegMenu1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSegMenuChanging(long value);
    partial void OnIdSegMenuChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPadreIdChanging(System.Nullable<long> value);
    partial void OnPadreIdChanged();
    partial void OnPosicionChanging(int value);
    partial void OnPosicionChanged();
    partial void OnIconoChanging(string value);
    partial void OnIconoChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    #endregion
	
	public SegMenu()
	{
		this._SegMenus = new EntitySet<SegMenu>(new Action<SegMenu>(this.attach_SegMenus), new Action<SegMenu>(this.detach_SegMenus));
		this._SegRolMenus = new EntitySet<SegRolMenu>(new Action<SegRolMenu>(this.attach_SegRolMenus), new Action<SegRolMenu>(this.detach_SegRolMenus));
		this._SegMenu1 = default(EntityRef<SegMenu>);
		OnCreated();
	}
	
	[Column(Storage="_IdSegMenu", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long IdSegMenu
	{
		get
		{
			return this._IdSegMenu;
		}
		set
		{
			if ((this._IdSegMenu != value))
			{
				this.OnIdSegMenuChanging(value);
				this.SendPropertyChanging();
				this._IdSegMenu = value;
				this.SendPropertyChanged("IdSegMenu");
				this.OnIdSegMenuChanged();
			}
		}
	}
	
	[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Descripcion
	{
		get
		{
			return this._Descripcion;
		}
		set
		{
			if ((this._Descripcion != value))
			{
				this.OnDescripcionChanging(value);
				this.SendPropertyChanging();
				this._Descripcion = value;
				this.SendPropertyChanged("Descripcion");
				this.OnDescripcionChanged();
			}
		}
	}
	
	[Column(Storage="_PadreId", DbType="BigInt")]
	public System.Nullable<long> PadreId
	{
		get
		{
			return this._PadreId;
		}
		set
		{
			if ((this._PadreId != value))
			{
				if (this._SegMenu1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPadreIdChanging(value);
				this.SendPropertyChanging();
				this._PadreId = value;
				this.SendPropertyChanged("PadreId");
				this.OnPadreIdChanged();
			}
		}
	}
	
	[Column(Storage="_Posicion", DbType="Int NOT NULL")]
	public int Posicion
	{
		get
		{
			return this._Posicion;
		}
		set
		{
			if ((this._Posicion != value))
			{
				this.OnPosicionChanging(value);
				this.SendPropertyChanging();
				this._Posicion = value;
				this.SendPropertyChanged("Posicion");
				this.OnPosicionChanged();
			}
		}
	}
	
	[Column(Storage="_Icono", DbType="VarChar(150)")]
	public string Icono
	{
		get
		{
			return this._Icono;
		}
		set
		{
			if ((this._Icono != value))
			{
				this.OnIconoChanging(value);
				this.SendPropertyChanging();
				this._Icono = value;
				this.SendPropertyChanged("Icono");
				this.OnIconoChanged();
			}
		}
	}
	
	[Column(Storage="_Url", DbType="VarChar(150)")]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this.OnUrlChanging(value);
				this.SendPropertyChanging();
				this._Url = value;
				this.SendPropertyChanged("Url");
				this.OnUrlChanged();
			}
		}
	}
	
	[Column(Storage="_Target", DbType="VarChar(50)")]
	public string Target
	{
		get
		{
			return this._Target;
		}
		set
		{
			if ((this._Target != value))
			{
				this.OnTargetChanging(value);
				this.SendPropertyChanging();
				this._Target = value;
				this.SendPropertyChanged("Target");
				this.OnTargetChanged();
			}
		}
	}
	
	[Association(Name="SegMenu_SegMenu", Storage="_SegMenus", OtherKey="PadreId")]
	public EntitySet<SegMenu> ColHijosSegMenus
	{
		get
		{
			return this._SegMenus;
		}
		set
		{
			this._SegMenus.Assign(value);
		}
	}
	
	[Association(Name="SegMenu_SegRolMenu", Storage="_SegRolMenus", OtherKey="Menu")]
	public EntitySet<SegRolMenu> ColSegRolMenus
	{
		get
		{
			return this._SegRolMenus;
		}
		set
		{
			this._SegRolMenus.Assign(value);
		}
	}
	
	[Association(Name="SegMenu_SegMenu", Storage="_SegMenu1", ThisKey="PadreId", IsForeignKey=true)]
	public SegMenu ObjPadreSegMenu
	{
		get
		{
			return this._SegMenu1.Entity;
		}
		set
		{
			SegMenu previousValue = this._SegMenu1.Entity;
			if (((previousValue != value) 
						|| (this._SegMenu1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SegMenu1.Entity = null;
					previousValue.ColHijosSegMenus.Remove(this);
				}
				this._SegMenu1.Entity = value;
				if ((value != null))
				{
					value.ColHijosSegMenus.Add(this);
					this._PadreId = value.IdSegMenu;
				}
				else
				{
					this._PadreId = default(Nullable<long>);
				}
				this.SendPropertyChanged("ObjPadreSegMenu");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SegMenus(SegMenu entity)
	{
		this.SendPropertyChanging();
		entity.ObjPadreSegMenu = this;
	}
	
	private void detach_SegMenus(SegMenu entity)
	{
		this.SendPropertyChanging();
		entity.ObjPadreSegMenu = null;
	}
	
	private void attach_SegRolMenus(SegRolMenu entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegMenu = this;
	}
	
	private void detach_SegRolMenus(SegRolMenu entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegMenu = null;
	}
}

[Table(Name="dbo.SegRol")]
public partial class SegRol : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _IdSegRol;
	
	private string _Descripcion;
	
	private EntitySet<SegRolMenu> _SegRolMenus;
	
	private EntitySet<SegUsuarioRol> _SegUsuarioRols;
	
	private EntitySet<RolesPlanilla> _ColRolesPlanillas;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSegRolChanging(long value);
    partial void OnIdSegRolChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
	
	public SegRol()
	{
		this._SegRolMenus = new EntitySet<SegRolMenu>(new Action<SegRolMenu>(this.attach_SegRolMenus), new Action<SegRolMenu>(this.detach_SegRolMenus));
		this._SegUsuarioRols = new EntitySet<SegUsuarioRol>(new Action<SegUsuarioRol>(this.attach_SegUsuarioRols), new Action<SegUsuarioRol>(this.detach_SegUsuarioRols));
		this._ColRolesPlanillas = new EntitySet<RolesPlanilla>(new Action<RolesPlanilla>(this.attach_ColRolesPlanillas), new Action<RolesPlanilla>(this.detach_ColRolesPlanillas));
		OnCreated();
	}
	
	[Column(Storage="_IdSegRol", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long IdSegRol
	{
		get
		{
			return this._IdSegRol;
		}
		set
		{
			if ((this._IdSegRol != value))
			{
				this.OnIdSegRolChanging(value);
				this.SendPropertyChanging();
				this._IdSegRol = value;
				this.SendPropertyChanged("IdSegRol");
				this.OnIdSegRolChanged();
			}
		}
	}
	
	[Column(Storage="_Descripcion", DbType="VarChar(50)")]
	public string Descripcion
	{
		get
		{
			return this._Descripcion;
		}
		set
		{
			if ((this._Descripcion != value))
			{
				this.OnDescripcionChanging(value);
				this.SendPropertyChanging();
				this._Descripcion = value;
				this.SendPropertyChanged("Descripcion");
				this.OnDescripcionChanged();
			}
		}
	}
	
	[Association(Name="SegRol_SegRolMenu", Storage="_SegRolMenus", OtherKey="Rol")]
	public EntitySet<SegRolMenu> ColSegRolMenus
	{
		get
		{
			return this._SegRolMenus;
		}
		set
		{
			this._SegRolMenus.Assign(value);
		}
	}
	
	[Association(Name="SegRol_SegUsuarioRol", Storage="_SegUsuarioRols", OtherKey="Rol")]
	public EntitySet<SegUsuarioRol> ColSegUsuarioRols
	{
		get
		{
			return this._SegUsuarioRols;
		}
		set
		{
			this._SegUsuarioRols.Assign(value);
		}
	}
	
	[Association(Name="SegRol_RolesPlanilla", Storage="_ColRolesPlanillas", OtherKey="IdRol")]
	public EntitySet<RolesPlanilla> ColRolesPlanillas
	{
		get
		{
			return this._ColRolesPlanillas;
		}
		set
		{
			this._ColRolesPlanillas.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SegRolMenus(SegRolMenu entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegRol = this;
	}
	
	private void detach_SegRolMenus(SegRolMenu entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegRol = null;
	}
	
	private void attach_SegUsuarioRols(SegUsuarioRol entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegRol = this;
	}
	
	private void detach_SegUsuarioRols(SegUsuarioRol entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegRol = null;
	}
	
	private void attach_ColRolesPlanillas(RolesPlanilla entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegRol = this;
	}
	
	private void detach_ColRolesPlanillas(RolesPlanilla entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegRol = null;
	}
}

[Table(Name="dbo.SegRolMenu")]
public partial class SegRolMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _IdSegRolMenu;
	
	private long _Menu;
	
	private long _Rol;
	
	private bool _Lectura;
	
	private bool _Modificacion;
	
	private bool _Creacion;
	
	private EntityRef<SegMenu> _SegMenu;
	
	private EntityRef<SegRol> _SegRol;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSegRolMenuChanging(long value);
    partial void OnIdSegRolMenuChanged();
    partial void OnMenuChanging(long value);
    partial void OnMenuChanged();
    partial void OnRolChanging(long value);
    partial void OnRolChanged();
    partial void OnLecturaChanging(bool value);
    partial void OnLecturaChanged();
    partial void OnModificacionChanging(bool value);
    partial void OnModificacionChanged();
    partial void OnCreacionChanging(bool value);
    partial void OnCreacionChanged();
    #endregion
	
	public SegRolMenu()
	{
		this._SegMenu = default(EntityRef<SegMenu>);
		this._SegRol = default(EntityRef<SegRol>);
		OnCreated();
	}
	
	[Column(Storage="_IdSegRolMenu", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long IdSegRolMenu
	{
		get
		{
			return this._IdSegRolMenu;
		}
		set
		{
			if ((this._IdSegRolMenu != value))
			{
				this.OnIdSegRolMenuChanging(value);
				this.SendPropertyChanging();
				this._IdSegRolMenu = value;
				this.SendPropertyChanged("IdSegRolMenu");
				this.OnIdSegRolMenuChanged();
			}
		}
	}
	
	[Column(Storage="_Menu", DbType="BigInt NOT NULL")]
	public long Menu
	{
		get
		{
			return this._Menu;
		}
		set
		{
			if ((this._Menu != value))
			{
				if (this._SegMenu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMenuChanging(value);
				this.SendPropertyChanging();
				this._Menu = value;
				this.SendPropertyChanged("Menu");
				this.OnMenuChanged();
			}
		}
	}
	
	[Column(Storage="_Rol", DbType="BigInt NOT NULL")]
	public long Rol
	{
		get
		{
			return this._Rol;
		}
		set
		{
			if ((this._Rol != value))
			{
				if (this._SegRol.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRolChanging(value);
				this.SendPropertyChanging();
				this._Rol = value;
				this.SendPropertyChanged("Rol");
				this.OnRolChanged();
			}
		}
	}
	
	[Column(Storage="_Lectura", DbType="Bit NOT NULL")]
	public bool Lectura
	{
		get
		{
			return this._Lectura;
		}
		set
		{
			if ((this._Lectura != value))
			{
				this.OnLecturaChanging(value);
				this.SendPropertyChanging();
				this._Lectura = value;
				this.SendPropertyChanged("Lectura");
				this.OnLecturaChanged();
			}
		}
	}
	
	[Column(Storage="_Modificacion", DbType="Bit NOT NULL")]
	public bool Modificacion
	{
		get
		{
			return this._Modificacion;
		}
		set
		{
			if ((this._Modificacion != value))
			{
				this.OnModificacionChanging(value);
				this.SendPropertyChanging();
				this._Modificacion = value;
				this.SendPropertyChanged("Modificacion");
				this.OnModificacionChanged();
			}
		}
	}
	
	[Column(Storage="_Creacion", DbType="Bit NOT NULL")]
	public bool Creacion
	{
		get
		{
			return this._Creacion;
		}
		set
		{
			if ((this._Creacion != value))
			{
				this.OnCreacionChanging(value);
				this.SendPropertyChanging();
				this._Creacion = value;
				this.SendPropertyChanged("Creacion");
				this.OnCreacionChanged();
			}
		}
	}
	
	[Association(Name="SegMenu_SegRolMenu", Storage="_SegMenu", ThisKey="Menu", IsForeignKey=true)]
	public SegMenu ObjSegMenu
	{
		get
		{
			return this._SegMenu.Entity;
		}
		set
		{
			SegMenu previousValue = this._SegMenu.Entity;
			if (((previousValue != value) 
						|| (this._SegMenu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SegMenu.Entity = null;
					previousValue.ColSegRolMenus.Remove(this);
				}
				this._SegMenu.Entity = value;
				if ((value != null))
				{
					value.ColSegRolMenus.Add(this);
					this._Menu = value.IdSegMenu;
				}
				else
				{
					this._Menu = default(long);
				}
				this.SendPropertyChanged("ObjSegMenu");
			}
		}
	}
	
	[Association(Name="SegRol_SegRolMenu", Storage="_SegRol", ThisKey="Rol", IsForeignKey=true)]
	public SegRol ObjSegRol
	{
		get
		{
			return this._SegRol.Entity;
		}
		set
		{
			SegRol previousValue = this._SegRol.Entity;
			if (((previousValue != value) 
						|| (this._SegRol.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SegRol.Entity = null;
					previousValue.ColSegRolMenus.Remove(this);
				}
				this._SegRol.Entity = value;
				if ((value != null))
				{
					value.ColSegRolMenus.Add(this);
					this._Rol = value.IdSegRol;
				}
				else
				{
					this._Rol = default(long);
				}
				this.SendPropertyChanged("ObjSegRol");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.SegUsuario")]
public partial class SegUsuario : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _IdSegUsuario;
	
	private string _Password;
	
	private string _Login;
	
	private System.Nullable<int> _IdEmpresa;
	
	private EntitySet<SegUsuarioRol> _SegUsuarioRols;
	
	private EntityRef<Empresa> _ObjEmpresa;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSegUsuarioChanging(long value);
    partial void OnIdSegUsuarioChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnIdEmpresaChanging(System.Nullable<int> value);
    partial void OnIdEmpresaChanged();
    #endregion
	
	public SegUsuario()
	{
		this._SegUsuarioRols = new EntitySet<SegUsuarioRol>(new Action<SegUsuarioRol>(this.attach_SegUsuarioRols), new Action<SegUsuarioRol>(this.detach_SegUsuarioRols));
		this._ObjEmpresa = default(EntityRef<Empresa>);
		OnCreated();
	}
	
	[Column(Storage="_IdSegUsuario", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long IdSegUsuario
	{
		get
		{
			return this._IdSegUsuario;
		}
		set
		{
			if ((this._IdSegUsuario != value))
			{
				this.OnIdSegUsuarioChanging(value);
				this.SendPropertyChanging();
				this._IdSegUsuario = value;
				this.SendPropertyChanged("IdSegUsuario");
				this.OnIdSegUsuarioChanged();
			}
		}
	}
	
	[Column(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[Column(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Login
	{
		get
		{
			return this._Login;
		}
		set
		{
			if ((this._Login != value))
			{
				this.OnLoginChanging(value);
				this.SendPropertyChanging();
				this._Login = value;
				this.SendPropertyChanged("Login");
				this.OnLoginChanged();
			}
		}
	}
	
	[Column(Storage="_IdEmpresa", DbType="Int")]
	public System.Nullable<int> IdEmpresa
	{
		get
		{
			return this._IdEmpresa;
		}
		set
		{
			if ((this._IdEmpresa != value))
			{
				if (this._ObjEmpresa.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdEmpresaChanging(value);
				this.SendPropertyChanging();
				this._IdEmpresa = value;
				this.SendPropertyChanged("IdEmpresa");
				this.OnIdEmpresaChanged();
			}
		}
	}
	
	[Association(Name="SegUsuario_SegUsuarioRol", Storage="_SegUsuarioRols", OtherKey="Usuario")]
	public EntitySet<SegUsuarioRol> ColSegUsuarioRols
	{
		get
		{
			return this._SegUsuarioRols;
		}
		set
		{
			this._SegUsuarioRols.Assign(value);
		}
	}
	
	[Association(Name="Empresa_SegUsuario", Storage="_ObjEmpresa", ThisKey="IdEmpresa", IsForeignKey=true)]
	public Empresa ObjEmpresa
	{
		get
		{
			return this._ObjEmpresa.Entity;
		}
		set
		{
			Empresa previousValue = this._ObjEmpresa.Entity;
			if (((previousValue != value) 
						|| (this._ObjEmpresa.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ObjEmpresa.Entity = null;
					previousValue.ColSegUsuarios.Remove(this);
				}
				this._ObjEmpresa.Entity = value;
				if ((value != null))
				{
					value.ColSegUsuarios.Add(this);
					this._IdEmpresa = value.IdEmpresa;
				}
				else
				{
					this._IdEmpresa = default(Nullable<int>);
				}
				this.SendPropertyChanged("ObjEmpresa");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SegUsuarioRols(SegUsuarioRol entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegUsuario = this;
	}
	
	private void detach_SegUsuarioRols(SegUsuarioRol entity)
	{
		this.SendPropertyChanging();
		entity.ObjSegUsuario = null;
	}
}

[Table(Name="dbo.SegUsuarioRol")]
public partial class SegUsuarioRol : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _IdSegUsuarioRol;
	
	private long _Usuario;
	
	private long _Rol;
	
	private EntityRef<SegRol> _SegRol;
	
	private EntityRef<SegUsuario> _SegUsuario;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSegUsuarioRolChanging(long value);
    partial void OnIdSegUsuarioRolChanged();
    partial void OnUsuarioChanging(long value);
    partial void OnUsuarioChanged();
    partial void OnRolChanging(long value);
    partial void OnRolChanged();
    #endregion
	
	public SegUsuarioRol()
	{
		this._SegRol = default(EntityRef<SegRol>);
		this._SegUsuario = default(EntityRef<SegUsuario>);
		OnCreated();
	}
	
	[Column(Storage="_IdSegUsuarioRol", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long IdSegUsuarioRol
	{
		get
		{
			return this._IdSegUsuarioRol;
		}
		set
		{
			if ((this._IdSegUsuarioRol != value))
			{
				this.OnIdSegUsuarioRolChanging(value);
				this.SendPropertyChanging();
				this._IdSegUsuarioRol = value;
				this.SendPropertyChanged("IdSegUsuarioRol");
				this.OnIdSegUsuarioRolChanged();
			}
		}
	}
	
	[Column(Storage="_Usuario", DbType="BigInt NOT NULL")]
	public long Usuario
	{
		get
		{
			return this._Usuario;
		}
		set
		{
			if ((this._Usuario != value))
			{
				if (this._SegUsuario.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUsuarioChanging(value);
				this.SendPropertyChanging();
				this._Usuario = value;
				this.SendPropertyChanged("Usuario");
				this.OnUsuarioChanged();
			}
		}
	}
	
	[Column(Storage="_Rol", DbType="BigInt NOT NULL")]
	public long Rol
	{
		get
		{
			return this._Rol;
		}
		set
		{
			if ((this._Rol != value))
			{
				if (this._SegRol.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRolChanging(value);
				this.SendPropertyChanging();
				this._Rol = value;
				this.SendPropertyChanged("Rol");
				this.OnRolChanged();
			}
		}
	}
	
	[Association(Name="SegRol_SegUsuarioRol", Storage="_SegRol", ThisKey="Rol", IsForeignKey=true)]
	public SegRol ObjSegRol
	{
		get
		{
			return this._SegRol.Entity;
		}
		set
		{
			SegRol previousValue = this._SegRol.Entity;
			if (((previousValue != value) 
						|| (this._SegRol.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SegRol.Entity = null;
					previousValue.ColSegUsuarioRols.Remove(this);
				}
				this._SegRol.Entity = value;
				if ((value != null))
				{
					value.ColSegUsuarioRols.Add(this);
					this._Rol = value.IdSegRol;
				}
				else
				{
					this._Rol = default(long);
				}
				this.SendPropertyChanged("ObjSegRol");
			}
		}
	}
	
	[Association(Name="SegUsuario_SegUsuarioRol", Storage="_SegUsuario", ThisKey="Usuario", IsForeignKey=true)]
	public SegUsuario ObjSegUsuario
	{
		get
		{
			return this._SegUsuario.Entity;
		}
		set
		{
			SegUsuario previousValue = this._SegUsuario.Entity;
			if (((previousValue != value) 
						|| (this._SegUsuario.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SegUsuario.Entity = null;
					previousValue.ColSegUsuarioRols.Remove(this);
				}
				this._SegUsuario.Entity = value;
				if ((value != null))
				{
					value.ColSegUsuarioRols.Add(this);
					this._Usuario = value.IdSegUsuario;
				}
				else
				{
					this._Usuario = default(long);
				}
				this.SendPropertyChanged("ObjSegUsuario");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.RolesPlanilla")]
public partial class RolesPlanilla : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _IdRolPlanilla;
	
	private long _IdPlanilla;
	
	private long _IdRol;
	
	private EntityRef<SegRol> _ObjSegRol;
	
	private EntityRef<Plantilla> _Plantilla;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRolPlanillaChanging(long value);
    partial void OnIdRolPlanillaChanged();
    partial void OnIdPlanillaChanging(long value);
    partial void OnIdPlanillaChanged();
    partial void OnIdRolChanging(long value);
    partial void OnIdRolChanged();
    #endregion
	
	public RolesPlanilla()
	{
		this._ObjSegRol = default(EntityRef<SegRol>);
		this._Plantilla = default(EntityRef<Plantilla>);
		OnCreated();
	}
	
	[Column(Storage="_IdRolPlanilla", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long IdRolPlanilla
	{
		get
		{
			return this._IdRolPlanilla;
		}
		set
		{
			if ((this._IdRolPlanilla != value))
			{
				this.OnIdRolPlanillaChanging(value);
				this.SendPropertyChanging();
				this._IdRolPlanilla = value;
				this.SendPropertyChanged("IdRolPlanilla");
				this.OnIdRolPlanillaChanged();
			}
		}
	}
	
	[Column(Storage="_IdPlanilla", DbType="BigInt NOT NULL")]
	public long IdPlanilla
	{
		get
		{
			return this._IdPlanilla;
		}
		set
		{
			if ((this._IdPlanilla != value))
			{
				if (this._Plantilla.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdPlanillaChanging(value);
				this.SendPropertyChanging();
				this._IdPlanilla = value;
				this.SendPropertyChanged("IdPlanilla");
				this.OnIdPlanillaChanged();
			}
		}
	}
	
	[Column(Storage="_IdRol", DbType="BigInt NOT NULL")]
	public long IdRol
	{
		get
		{
			return this._IdRol;
		}
		set
		{
			if ((this._IdRol != value))
			{
				if (this._ObjSegRol.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdRolChanging(value);
				this.SendPropertyChanging();
				this._IdRol = value;
				this.SendPropertyChanged("IdRol");
				this.OnIdRolChanged();
			}
		}
	}
	
	[Association(Name="SegRol_RolesPlanilla", Storage="_ObjSegRol", ThisKey="IdRol", IsForeignKey=true)]
	public SegRol ObjSegRol
	{
		get
		{
			return this._ObjSegRol.Entity;
		}
		set
		{
			SegRol previousValue = this._ObjSegRol.Entity;
			if (((previousValue != value) 
						|| (this._ObjSegRol.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ObjSegRol.Entity = null;
					previousValue.ColRolesPlanillas.Remove(this);
				}
				this._ObjSegRol.Entity = value;
				if ((value != null))
				{
					value.ColRolesPlanillas.Add(this);
					this._IdRol = value.IdSegRol;
				}
				else
				{
					this._IdRol = default(long);
				}
				this.SendPropertyChanged("ObjSegRol");
			}
		}
	}
	
	[Association(Name="Plantilla_RolesPlanilla", Storage="_Plantilla", ThisKey="IdPlanilla", IsForeignKey=true)]
	public Plantilla Plantilla
	{
		get
		{
			return this._Plantilla.Entity;
		}
		set
		{
			Plantilla previousValue = this._Plantilla.Entity;
			if (((previousValue != value) 
						|| (this._Plantilla.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Plantilla.Entity = null;
					previousValue.RolesPlanillas.Remove(this);
				}
				this._Plantilla.Entity = value;
				if ((value != null))
				{
					value.RolesPlanillas.Add(this);
					this._IdPlanilla = value.IdPlantilla;
				}
				else
				{
					this._IdPlanilla = default(long);
				}
				this.SendPropertyChanged("Plantilla");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Contrato")]
public partial class Contrato : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdContrato;
	
	private string _Codigo;
	
	private string _Servicio;
	
	private System.Nullable<System.DateTime> _FechaInicio;
	
	private System.Nullable<System.DateTime> _FechaVencimiento;
	
	private System.Nullable<System.DateTime> _Prorroga;
	
	private System.Nullable<int> _TipoContrato;
	
	private System.Nullable<int> _Contratadopor;
	
	private EntitySet<ContratoEmpresa> _ColContratoEmpresas;
	
	private EntityRef<Clasificacion> _Clasificacion;
	
	private EntityRef<Clasificacion> _Clasificacion1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdContratoChanging(int value);
    partial void OnIdContratoChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnServicioChanging(string value);
    partial void OnServicioChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaVencimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaVencimientoChanged();
    partial void OnProrrogaChanging(System.Nullable<System.DateTime> value);
    partial void OnProrrogaChanged();
    partial void OnTipoContratoChanging(System.Nullable<int> value);
    partial void OnTipoContratoChanged();
    partial void OnContratadoporChanging(System.Nullable<int> value);
    partial void OnContratadoporChanged();
    #endregion
	
	public Contrato()
	{
		this._ColContratoEmpresas = new EntitySet<ContratoEmpresa>(new Action<ContratoEmpresa>(this.attach_ColContratoEmpresas), new Action<ContratoEmpresa>(this.detach_ColContratoEmpresas));
		this._Clasificacion = default(EntityRef<Clasificacion>);
		this._Clasificacion1 = default(EntityRef<Clasificacion>);
		OnCreated();
	}
	
	[Column(Storage="_IdContrato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdContrato
	{
		get
		{
			return this._IdContrato;
		}
		set
		{
			if ((this._IdContrato != value))
			{
				this.OnIdContratoChanging(value);
				this.SendPropertyChanging();
				this._IdContrato = value;
				this.SendPropertyChanged("IdContrato");
				this.OnIdContratoChanged();
			}
		}
	}
	
	[Column(Storage="_Codigo", DbType="VarChar(50)")]
	public string Codigo
	{
		get
		{
			return this._Codigo;
		}
		set
		{
			if ((this._Codigo != value))
			{
				this.OnCodigoChanging(value);
				this.SendPropertyChanging();
				this._Codigo = value;
				this.SendPropertyChanged("Codigo");
				this.OnCodigoChanged();
			}
		}
	}
	
	[Column(Storage="_Servicio", DbType="VarChar(255)")]
	public string Servicio
	{
		get
		{
			return this._Servicio;
		}
		set
		{
			if ((this._Servicio != value))
			{
				this.OnServicioChanging(value);
				this.SendPropertyChanging();
				this._Servicio = value;
				this.SendPropertyChanged("Servicio");
				this.OnServicioChanged();
			}
		}
	}
	
	[Column(Storage="_FechaInicio", DbType="DateTime")]
	public System.Nullable<System.DateTime> FechaInicio
	{
		get
		{
			return this._FechaInicio;
		}
		set
		{
			if ((this._FechaInicio != value))
			{
				this.OnFechaInicioChanging(value);
				this.SendPropertyChanging();
				this._FechaInicio = value;
				this.SendPropertyChanged("FechaInicio");
				this.OnFechaInicioChanged();
			}
		}
	}
	
	[Column(Storage="_FechaVencimiento", DbType="DateTime")]
	public System.Nullable<System.DateTime> FechaVencimiento
	{
		get
		{
			return this._FechaVencimiento;
		}
		set
		{
			if ((this._FechaVencimiento != value))
			{
				this.OnFechaVencimientoChanging(value);
				this.SendPropertyChanging();
				this._FechaVencimiento = value;
				this.SendPropertyChanged("FechaVencimiento");
				this.OnFechaVencimientoChanged();
			}
		}
	}
	
	[Column(Storage="_Prorroga", DbType="DateTime")]
	public System.Nullable<System.DateTime> Prorroga
	{
		get
		{
			return this._Prorroga;
		}
		set
		{
			if ((this._Prorroga != value))
			{
				this.OnProrrogaChanging(value);
				this.SendPropertyChanging();
				this._Prorroga = value;
				this.SendPropertyChanged("Prorroga");
				this.OnProrrogaChanged();
			}
		}
	}
	
	[Column(Storage="_TipoContrato", DbType="Int")]
	public System.Nullable<int> TipoContrato
	{
		get
		{
			return this._TipoContrato;
		}
		set
		{
			if ((this._TipoContrato != value))
			{
				if (this._Clasificacion.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTipoContratoChanging(value);
				this.SendPropertyChanging();
				this._TipoContrato = value;
				this.SendPropertyChanged("TipoContrato");
				this.OnTipoContratoChanged();
			}
		}
	}
	
	[Column(Storage="_Contratadopor", DbType="Int")]
	public System.Nullable<int> Contratadopor
	{
		get
		{
			return this._Contratadopor;
		}
		set
		{
			if ((this._Contratadopor != value))
			{
				if (this._Clasificacion1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContratadoporChanging(value);
				this.SendPropertyChanging();
				this._Contratadopor = value;
				this.SendPropertyChanged("Contratadopor");
				this.OnContratadoporChanged();
			}
		}
	}
	
	[Association(Name="Contrato_ContratoEmpresa", Storage="_ColContratoEmpresas", OtherKey="IdContrato")]
	public EntitySet<ContratoEmpresa> ColContratoEmpresas
	{
		get
		{
			return this._ColContratoEmpresas;
		}
		set
		{
			this._ColContratoEmpresas.Assign(value);
		}
	}
	
	[Association(Name="Clasificacion_Contrato", Storage="_Clasificacion", ThisKey="TipoContrato", IsForeignKey=true, DeleteRule="CASCADE")]
	public Clasificacion Clasificacion
	{
		get
		{
			return this._Clasificacion.Entity;
		}
		set
		{
			Clasificacion previousValue = this._Clasificacion.Entity;
			if (((previousValue != value) 
						|| (this._Clasificacion.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Clasificacion.Entity = null;
					previousValue.Contratos.Remove(this);
				}
				this._Clasificacion.Entity = value;
				if ((value != null))
				{
					value.Contratos.Add(this);
					this._TipoContrato = value.IdClasificacion;
				}
				else
				{
					this._TipoContrato = default(Nullable<int>);
				}
				this.SendPropertyChanged("Clasificacion");
			}
		}
	}
	
	[Association(Name="Clasificacion_Contrato1", Storage="_Clasificacion1", ThisKey="Contratadopor", IsForeignKey=true)]
	public Clasificacion Clasificacion1
	{
		get
		{
			return this._Clasificacion1.Entity;
		}
		set
		{
			Clasificacion previousValue = this._Clasificacion1.Entity;
			if (((previousValue != value) 
						|| (this._Clasificacion1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Clasificacion1.Entity = null;
					previousValue.Contratos1.Remove(this);
				}
				this._Clasificacion1.Entity = value;
				if ((value != null))
				{
					value.Contratos1.Add(this);
					this._Contratadopor = value.IdClasificacion;
				}
				else
				{
					this._Contratadopor = default(Nullable<int>);
				}
				this.SendPropertyChanged("Clasificacion1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ColContratoEmpresas(ContratoEmpresa entity)
	{
		this.SendPropertyChanging();
		entity.ObjContrato = this;
	}
	
	private void detach_ColContratoEmpresas(ContratoEmpresa entity)
	{
		this.SendPropertyChanging();
		entity.ObjContrato = null;
	}
}

[Table(Name="dbo.ContratoEmpresas")]
public partial class ContratoEmpresa : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdContratoEmpresas;
	
	private System.Nullable<int> _IdContrato;
	
	private System.Nullable<int> _IdEmpresa;
	
	private System.Nullable<bool> _EsContratista;
	
	private string _Comentario;
	
	private EntitySet<CabeceraHojasDeRuta> _ColCabeceraHojasDeRutas;
	
	private EntityRef<Contrato> _ObjContrato;
	
	private EntityRef<Empresa> _ObjEmpresa;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdContratoEmpresasChanging(int value);
    partial void OnIdContratoEmpresasChanged();
    partial void OnIdContratoChanging(System.Nullable<int> value);
    partial void OnIdContratoChanged();
    partial void OnIdEmpresaChanging(System.Nullable<int> value);
    partial void OnIdEmpresaChanged();
    partial void OnEsContratistaChanging(System.Nullable<bool> value);
    partial void OnEsContratistaChanged();
    partial void OnComentarioChanging(string value);
    partial void OnComentarioChanged();
    #endregion
	
	public ContratoEmpresa()
	{
		this._ColCabeceraHojasDeRutas = new EntitySet<CabeceraHojasDeRuta>(new Action<CabeceraHojasDeRuta>(this.attach_ColCabeceraHojasDeRutas), new Action<CabeceraHojasDeRuta>(this.detach_ColCabeceraHojasDeRutas));
		this._ObjContrato = default(EntityRef<Contrato>);
		this._ObjEmpresa = default(EntityRef<Empresa>);
		OnCreated();
	}
	
	[Column(Storage="_IdContratoEmpresas", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdContratoEmpresas
	{
		get
		{
			return this._IdContratoEmpresas;
		}
		set
		{
			if ((this._IdContratoEmpresas != value))
			{
				this.OnIdContratoEmpresasChanging(value);
				this.SendPropertyChanging();
				this._IdContratoEmpresas = value;
				this.SendPropertyChanged("IdContratoEmpresas");
				this.OnIdContratoEmpresasChanged();
			}
		}
	}
	
	[Column(Storage="_IdContrato", DbType="Int")]
	public System.Nullable<int> IdContrato
	{
		get
		{
			return this._IdContrato;
		}
		set
		{
			if ((this._IdContrato != value))
			{
				if (this._ObjContrato.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdContratoChanging(value);
				this.SendPropertyChanging();
				this._IdContrato = value;
				this.SendPropertyChanged("IdContrato");
				this.OnIdContratoChanged();
			}
		}
	}
	
	[Column(Storage="_IdEmpresa", DbType="Int")]
	public System.Nullable<int> IdEmpresa
	{
		get
		{
			return this._IdEmpresa;
		}
		set
		{
			if ((this._IdEmpresa != value))
			{
				if (this._ObjEmpresa.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdEmpresaChanging(value);
				this.SendPropertyChanging();
				this._IdEmpresa = value;
				this.SendPropertyChanged("IdEmpresa");
				this.OnIdEmpresaChanged();
			}
		}
	}
	
	[Column(Storage="_EsContratista", DbType="Bit")]
	public System.Nullable<bool> EsContratista
	{
		get
		{
			return this._EsContratista;
		}
		set
		{
			if ((this._EsContratista != value))
			{
				this.OnEsContratistaChanging(value);
				this.SendPropertyChanging();
				this._EsContratista = value;
				this.SendPropertyChanged("EsContratista");
				this.OnEsContratistaChanged();
			}
		}
	}
	
	[Column(Storage="_Comentario", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Comentario
	{
		get
		{
			return this._Comentario;
		}
		set
		{
			if ((this._Comentario != value))
			{
				this.OnComentarioChanging(value);
				this.SendPropertyChanging();
				this._Comentario = value;
				this.SendPropertyChanged("Comentario");
				this.OnComentarioChanged();
			}
		}
	}
	
	[Association(Name="ContratoEmpresa_CabeceraHojasDeRuta", Storage="_ColCabeceraHojasDeRutas", OtherKey="IdContratoEmpresa")]
	public EntitySet<CabeceraHojasDeRuta> ColCabeceraHojasDeRutas
	{
		get
		{
			return this._ColCabeceraHojasDeRutas;
		}
		set
		{
			this._ColCabeceraHojasDeRutas.Assign(value);
		}
	}
	
	[Association(Name="Contrato_ContratoEmpresa", Storage="_ObjContrato", ThisKey="IdContrato", IsForeignKey=true)]
	public Contrato ObjContrato
	{
		get
		{
			return this._ObjContrato.Entity;
		}
		set
		{
			Contrato previousValue = this._ObjContrato.Entity;
			if (((previousValue != value) 
						|| (this._ObjContrato.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ObjContrato.Entity = null;
					previousValue.ColContratoEmpresas.Remove(this);
				}
				this._ObjContrato.Entity = value;
				if ((value != null))
				{
					value.ColContratoEmpresas.Add(this);
					this._IdContrato = value.IdContrato;
				}
				else
				{
					this._IdContrato = default(Nullable<int>);
				}
				this.SendPropertyChanged("ObjContrato");
			}
		}
	}
	
	[Association(Name="Empresa_ContratoEmpresa", Storage="_ObjEmpresa", ThisKey="IdEmpresa", IsForeignKey=true)]
	public Empresa ObjEmpresa
	{
		get
		{
			return this._ObjEmpresa.Entity;
		}
		set
		{
			Empresa previousValue = this._ObjEmpresa.Entity;
			if (((previousValue != value) 
						|| (this._ObjEmpresa.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ObjEmpresa.Entity = null;
					previousValue.ColContratoEmpresas.Remove(this);
				}
				this._ObjEmpresa.Entity = value;
				if ((value != null))
				{
					value.ColContratoEmpresas.Add(this);
					this._IdEmpresa = value.IdEmpresa;
				}
				else
				{
					this._IdEmpresa = default(Nullable<int>);
				}
				this.SendPropertyChanged("ObjEmpresa");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ColCabeceraHojasDeRutas(CabeceraHojasDeRuta entity)
	{
		this.SendPropertyChanging();
		entity.ObjContratoEmpresa = this;
	}
	
	private void detach_ColCabeceraHojasDeRutas(CabeceraHojasDeRuta entity)
	{
		this.SendPropertyChanging();
		entity.ObjContratoEmpresa = null;
	}
}

[Table(Name="dbo.Empresa")]
public partial class Empresa : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdEmpresa;
	
	private string _RazonSocial;
	
	private string _CUIT;
	
	private System.Nullable<System.DateTime> _FechaAlta;
	
	private string _RepresentanteTecnico;
	
	private string _PrestacionEmergencia;
	
	private string _Direccion;
	
	private string _Telefono;
	
	private string _CorreoElectronico;
	
	private EntitySet<ContratoEmpresa> _ColContratoEmpresas;
	
	private EntitySet<SegUsuario> _ColSegUsuarios;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmpresaChanging(int value);
    partial void OnIdEmpresaChanged();
    partial void OnRazonSocialChanging(string value);
    partial void OnRazonSocialChanged();
    partial void OnCUITChanging(string value);
    partial void OnCUITChanged();
    partial void OnFechaAltaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaAltaChanged();
    partial void OnRepresentanteTecnicoChanging(string value);
    partial void OnRepresentanteTecnicoChanged();
    partial void OnPrestacionEmergenciaChanging(string value);
    partial void OnPrestacionEmergenciaChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCorreoElectronicoChanging(string value);
    partial void OnCorreoElectronicoChanged();
    #endregion
	
	public Empresa()
	{
		this._ColContratoEmpresas = new EntitySet<ContratoEmpresa>(new Action<ContratoEmpresa>(this.attach_ColContratoEmpresas), new Action<ContratoEmpresa>(this.detach_ColContratoEmpresas));
		this._ColSegUsuarios = new EntitySet<SegUsuario>(new Action<SegUsuario>(this.attach_ColSegUsuarios), new Action<SegUsuario>(this.detach_ColSegUsuarios));
		OnCreated();
	}
	
	[Column(Storage="_IdEmpresa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdEmpresa
	{
		get
		{
			return this._IdEmpresa;
		}
		set
		{
			if ((this._IdEmpresa != value))
			{
				this.OnIdEmpresaChanging(value);
				this.SendPropertyChanging();
				this._IdEmpresa = value;
				this.SendPropertyChanged("IdEmpresa");
				this.OnIdEmpresaChanged();
			}
		}
	}
	
	[Column(Storage="_RazonSocial", DbType="VarChar(50)")]
	public string RazonSocial
	{
		get
		{
			return this._RazonSocial;
		}
		set
		{
			if ((this._RazonSocial != value))
			{
				this.OnRazonSocialChanging(value);
				this.SendPropertyChanging();
				this._RazonSocial = value;
				this.SendPropertyChanged("RazonSocial");
				this.OnRazonSocialChanged();
			}
		}
	}
	
	[Column(Storage="_CUIT", DbType="VarChar(50)")]
	public string CUIT
	{
		get
		{
			return this._CUIT;
		}
		set
		{
			if ((this._CUIT != value))
			{
				this.OnCUITChanging(value);
				this.SendPropertyChanging();
				this._CUIT = value;
				this.SendPropertyChanged("CUIT");
				this.OnCUITChanged();
			}
		}
	}
	
	[Column(Storage="_FechaAlta", DbType="DateTime")]
	public System.Nullable<System.DateTime> FechaAlta
	{
		get
		{
			return this._FechaAlta;
		}
		set
		{
			if ((this._FechaAlta != value))
			{
				this.OnFechaAltaChanging(value);
				this.SendPropertyChanging();
				this._FechaAlta = value;
				this.SendPropertyChanged("FechaAlta");
				this.OnFechaAltaChanged();
			}
		}
	}
	
	[Column(Storage="_RepresentanteTecnico", DbType="VarChar(100)")]
	public string RepresentanteTecnico
	{
		get
		{
			return this._RepresentanteTecnico;
		}
		set
		{
			if ((this._RepresentanteTecnico != value))
			{
				this.OnRepresentanteTecnicoChanging(value);
				this.SendPropertyChanging();
				this._RepresentanteTecnico = value;
				this.SendPropertyChanged("RepresentanteTecnico");
				this.OnRepresentanteTecnicoChanged();
			}
		}
	}
	
	[Column(Storage="_PrestacionEmergencia", DbType="VarChar(100)")]
	public string PrestacionEmergencia
	{
		get
		{
			return this._PrestacionEmergencia;
		}
		set
		{
			if ((this._PrestacionEmergencia != value))
			{
				this.OnPrestacionEmergenciaChanging(value);
				this.SendPropertyChanging();
				this._PrestacionEmergencia = value;
				this.SendPropertyChanged("PrestacionEmergencia");
				this.OnPrestacionEmergenciaChanged();
			}
		}
	}
	
	[Column(Storage="_Direccion", DbType="VarChar(100)")]
	public string Direccion
	{
		get
		{
			return this._Direccion;
		}
		set
		{
			if ((this._Direccion != value))
			{
				this.OnDireccionChanging(value);
				this.SendPropertyChanging();
				this._Direccion = value;
				this.SendPropertyChanged("Direccion");
				this.OnDireccionChanged();
			}
		}
	}
	
	[Column(Storage="_Telefono", DbType="VarChar(100)")]
	public string Telefono
	{
		get
		{
			return this._Telefono;
		}
		set
		{
			if ((this._Telefono != value))
			{
				this.OnTelefonoChanging(value);
				this.SendPropertyChanging();
				this._Telefono = value;
				this.SendPropertyChanged("Telefono");
				this.OnTelefonoChanged();
			}
		}
	}
	
	[Column(Storage="_CorreoElectronico", DbType="VarChar(100)")]
	public string CorreoElectronico
	{
		get
		{
			return this._CorreoElectronico;
		}
		set
		{
			if ((this._CorreoElectronico != value))
			{
				this.OnCorreoElectronicoChanging(value);
				this.SendPropertyChanging();
				this._CorreoElectronico = value;
				this.SendPropertyChanged("CorreoElectronico");
				this.OnCorreoElectronicoChanged();
			}
		}
	}
	
	[Association(Name="Empresa_ContratoEmpresa", Storage="_ColContratoEmpresas", OtherKey="IdEmpresa")]
	public EntitySet<ContratoEmpresa> ColContratoEmpresas
	{
		get
		{
			return this._ColContratoEmpresas;
		}
		set
		{
			this._ColContratoEmpresas.Assign(value);
		}
	}
	
	[Association(Name="Empresa_SegUsuario", Storage="_ColSegUsuarios", OtherKey="IdEmpresa")]
	public EntitySet<SegUsuario> ColSegUsuarios
	{
		get
		{
			return this._ColSegUsuarios;
		}
		set
		{
			this._ColSegUsuarios.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ColContratoEmpresas(ContratoEmpresa entity)
	{
		this.SendPropertyChanging();
		entity.ObjEmpresa = this;
	}
	
	private void detach_ColContratoEmpresas(ContratoEmpresa entity)
	{
		this.SendPropertyChanging();
		entity.ObjEmpresa = null;
	}
	
	private void attach_ColSegUsuarios(SegUsuario entity)
	{
		this.SendPropertyChanging();
		entity.ObjEmpresa = this;
	}
	
	private void detach_ColSegUsuarios(SegUsuario entity)
	{
		this.SendPropertyChanging();
		entity.ObjEmpresa = null;
	}
}

[Table(Name="dbo.CabeceraHojasDeRuta")]
public partial class CabeceraHojasDeRuta : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdCabeceraHojasDeRuta;
	
	private int _IdEstado;
	
	private System.Nullable<System.DateTime> _FechaAprobacion;
	
	private System.DateTime _Periodo;
	
	private int _NroCarpeta;
	
	private int _IdContratoEmpresa;
	
	private System.Nullable<bool> _Publicar;
	
	private string _Estimacion;
	
	private System.Nullable<System.DateTime> _FechaEstimacion;
	
	private System.Nullable<System.DateTime> _FechaAprobacionSinLegajos;
	
	private EntitySet<HojasDeRuta> _ColHojasDeRutas;
	
	private EntityRef<ContratoEmpresa> _ObjContratoEmpresa;
	
	private EntityRef<Clasificacion> _ObjEstado;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCabeceraHojasDeRutaChanging(int value);
    partial void OnIdCabeceraHojasDeRutaChanged();
    partial void OnIdEstadoChanging(int value);
    partial void OnIdEstadoChanged();
    partial void OnFechaAprobacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaAprobacionChanged();
    partial void OnPeriodoChanging(System.DateTime value);
    partial void OnPeriodoChanged();
    partial void OnNroCarpetaChanging(int value);
    partial void OnNroCarpetaChanged();
    partial void OnIdContratoEmpresaChanging(int value);
    partial void OnIdContratoEmpresaChanged();
    partial void OnPublicarChanging(System.Nullable<bool> value);
    partial void OnPublicarChanged();
    partial void OnEstimacionChanging(string value);
    partial void OnEstimacionChanged();
    partial void OnFechaEstimacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaEstimacionChanged();
    partial void OnFechaAprobacionSinLegajosChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaAprobacionSinLegajosChanged();
    #endregion
	
	public CabeceraHojasDeRuta()
	{
		this._ColHojasDeRutas = new EntitySet<HojasDeRuta>(new Action<HojasDeRuta>(this.attach_ColHojasDeRutas), new Action<HojasDeRuta>(this.detach_ColHojasDeRutas));
		this._ObjContratoEmpresa = default(EntityRef<ContratoEmpresa>);
		this._ObjEstado = default(EntityRef<Clasificacion>);
		OnCreated();
	}
	
	[Column(Storage="_IdCabeceraHojasDeRuta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdCabeceraHojasDeRuta
	{
		get
		{
			return this._IdCabeceraHojasDeRuta;
		}
		set
		{
			if ((this._IdCabeceraHojasDeRuta != value))
			{
				this.OnIdCabeceraHojasDeRutaChanging(value);
				this.SendPropertyChanging();
				this._IdCabeceraHojasDeRuta = value;
				this.SendPropertyChanged("IdCabeceraHojasDeRuta");
				this.OnIdCabeceraHojasDeRutaChanged();
			}
		}
	}
	
	[Column(Storage="_IdEstado", DbType="Int NOT NULL")]
	public int IdEstado
	{
		get
		{
			return this._IdEstado;
		}
		set
		{
			if ((this._IdEstado != value))
			{
				if (this._ObjEstado.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdEstadoChanging(value);
				this.SendPropertyChanging();
				this._IdEstado = value;
				this.SendPropertyChanged("IdEstado");
				this.OnIdEstadoChanged();
			}
		}
	}
	
	[Column(Storage="_FechaAprobacion", DbType="DateTime")]
	public System.Nullable<System.DateTime> FechaAprobacion
	{
		get
		{
			return this._FechaAprobacion;
		}
		set
		{
			if ((this._FechaAprobacion != value))
			{
				this.OnFechaAprobacionChanging(value);
				this.SendPropertyChanging();
				this._FechaAprobacion = value;
				this.SendPropertyChanged("FechaAprobacion");
				this.OnFechaAprobacionChanged();
			}
		}
	}
	
	[Column(Storage="_Periodo", DbType="DateTime NOT NULL")]
	public System.DateTime Periodo
	{
		get
		{
			return this._Periodo;
		}
		set
		{
			if ((this._Periodo != value))
			{
				this.OnPeriodoChanging(value);
				this.SendPropertyChanging();
				this._Periodo = value;
				this.SendPropertyChanged("Periodo");
				this.OnPeriodoChanged();
			}
		}
	}
	
	[Column(Storage="_NroCarpeta", DbType="Int NOT NULL")]
	public int NroCarpeta
	{
		get
		{
			return this._NroCarpeta;
		}
		set
		{
			if ((this._NroCarpeta != value))
			{
				this.OnNroCarpetaChanging(value);
				this.SendPropertyChanging();
				this._NroCarpeta = value;
				this.SendPropertyChanged("NroCarpeta");
				this.OnNroCarpetaChanged();
			}
		}
	}
	
	[Column(Storage="_IdContratoEmpresa", DbType="Int NOT NULL")]
	public int IdContratoEmpresa
	{
		get
		{
			return this._IdContratoEmpresa;
		}
		set
		{
			if ((this._IdContratoEmpresa != value))
			{
				if (this._ObjContratoEmpresa.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdContratoEmpresaChanging(value);
				this.SendPropertyChanging();
				this._IdContratoEmpresa = value;
				this.SendPropertyChanged("IdContratoEmpresa");
				this.OnIdContratoEmpresaChanged();
			}
		}
	}
	
	[Column(Storage="_Publicar", DbType="Bit")]
	public System.Nullable<bool> Publicar
	{
		get
		{
			return this._Publicar;
		}
		set
		{
			if ((this._Publicar != value))
			{
				this.OnPublicarChanging(value);
				this.SendPropertyChanging();
				this._Publicar = value;
				this.SendPropertyChanged("Publicar");
				this.OnPublicarChanged();
			}
		}
	}
	
	[Column(Storage="_Estimacion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Estimacion
	{
		get
		{
			return this._Estimacion;
		}
		set
		{
			if ((this._Estimacion != value))
			{
				this.OnEstimacionChanging(value);
				this.SendPropertyChanging();
				this._Estimacion = value;
				this.SendPropertyChanged("Estimacion");
				this.OnEstimacionChanged();
			}
		}
	}
	
	[Column(Storage="_FechaEstimacion", DbType="DateTime")]
	public System.Nullable<System.DateTime> FechaEstimacion
	{
		get
		{
			return this._FechaEstimacion;
		}
		set
		{
			if ((this._FechaEstimacion != value))
			{
				this.OnFechaEstimacionChanging(value);
				this.SendPropertyChanging();
				this._FechaEstimacion = value;
				this.SendPropertyChanged("FechaEstimacion");
				this.OnFechaEstimacionChanged();
			}
		}
	}
	
	[Column(Storage="_FechaAprobacionSinLegajos", DbType="DateTime")]
	public System.Nullable<System.DateTime> FechaAprobacionSinLegajos
	{
		get
		{
			return this._FechaAprobacionSinLegajos;
		}
		set
		{
			if ((this._FechaAprobacionSinLegajos != value))
			{
				this.OnFechaAprobacionSinLegajosChanging(value);
				this.SendPropertyChanging();
				this._FechaAprobacionSinLegajos = value;
				this.SendPropertyChanged("FechaAprobacionSinLegajos");
				this.OnFechaAprobacionSinLegajosChanged();
			}
		}
	}
	
	[Association(Name="CabeceraHojasDeRuta_HojasDeRuta", Storage="_ColHojasDeRutas", OtherKey="IdCabeceraHojaDeRuta")]
	public EntitySet<HojasDeRuta> ColHojasDeRutas
	{
		get
		{
			return this._ColHojasDeRutas;
		}
		set
		{
			this._ColHojasDeRutas.Assign(value);
		}
	}
	
	[Association(Name="ContratoEmpresa_CabeceraHojasDeRuta", Storage="_ObjContratoEmpresa", ThisKey="IdContratoEmpresa", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public ContratoEmpresa ObjContratoEmpresa
	{
		get
		{
			return this._ObjContratoEmpresa.Entity;
		}
		set
		{
			ContratoEmpresa previousValue = this._ObjContratoEmpresa.Entity;
			if (((previousValue != value) 
						|| (this._ObjContratoEmpresa.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ObjContratoEmpresa.Entity = null;
					previousValue.ColCabeceraHojasDeRutas.Remove(this);
				}
				this._ObjContratoEmpresa.Entity = value;
				if ((value != null))
				{
					value.ColCabeceraHojasDeRutas.Add(this);
					this._IdContratoEmpresa = value.IdContratoEmpresas;
				}
				else
				{
					this._IdContratoEmpresa = default(int);
				}
				this.SendPropertyChanged("ObjContratoEmpresa");
			}
		}
	}
	
	[Association(Name="Clasificacion_CabeceraHojasDeRuta", Storage="_ObjEstado", ThisKey="IdEstado", IsForeignKey=true)]
	public Clasificacion ObjEstado
	{
		get
		{
			return this._ObjEstado.Entity;
		}
		set
		{
			Clasificacion previousValue = this._ObjEstado.Entity;
			if (((previousValue != value) 
						|| (this._ObjEstado.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ObjEstado.Entity = null;
					previousValue.CabeceraHojasDeRutas.Remove(this);
				}
				this._ObjEstado.Entity = value;
				if ((value != null))
				{
					value.CabeceraHojasDeRutas.Add(this);
					this._IdEstado = value.IdClasificacion;
				}
				else
				{
					this._IdEstado = default(int);
				}
				this.SendPropertyChanged("ObjEstado");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ColHojasDeRutas(HojasDeRuta entity)
	{
		this.SendPropertyChanging();
		entity.ObjCabeceraHojasDeRuta = this;
	}
	
	private void detach_ColHojasDeRutas(HojasDeRuta entity)
	{
		this.SendPropertyChanging();
		entity.ObjCabeceraHojasDeRuta = null;
	}
}

[Table(Name="dbo.HojasDeRuta")]
public partial class HojasDeRuta : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdHojaDeRuta;
	
	private int _IdCabeceraHojaDeRuta;
	
	private long _IdPlanilla;
	
	private string _HojaComentario;
	
	private System.Nullable<System.DateTime> _HojaFechaControlado;
	
	private System.Nullable<bool> _HojaAprobado;
	
	private System.Nullable<System.DateTime> _HojaFechaAprobacion;
	
	private string _DocComentario;
	
	private System.Nullable<System.DateTime> _DocFechaEntrega;
	
	private string _AuditadoPor;
	
	private EntityRef<CabeceraHojasDeRuta> _ObjCabeceraHojasDeRuta;
	
	private EntityRef<Plantilla> _ObjPlantilla;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHojaDeRutaChanging(int value);
    partial void OnIdHojaDeRutaChanged();
    partial void OnIdCabeceraHojaDeRutaChanging(int value);
    partial void OnIdCabeceraHojaDeRutaChanged();
    partial void OnIdPlanillaChanging(long value);
    partial void OnIdPlanillaChanged();
    partial void OnHojaComentarioChanging(string value);
    partial void OnHojaComentarioChanged();
    partial void OnHojaFechaControladoChanging(System.Nullable<System.DateTime> value);
    partial void OnHojaFechaControladoChanged();
    partial void OnHojaAprobadoChanging(System.Nullable<bool> value);
    partial void OnHojaAprobadoChanged();
    partial void OnHojaFechaAprobacionChanging(System.Nullable<System.DateTime> value);
    partial void OnHojaFechaAprobacionChanged();
    partial void OnDocComentarioChanging(string value);
    partial void OnDocComentarioChanged();
    partial void OnDocFechaEntregaChanging(System.Nullable<System.DateTime> value);
    partial void OnDocFechaEntregaChanged();
    partial void OnAuditadoPorChanging(string value);
    partial void OnAuditadoPorChanged();
    #endregion
	
	public HojasDeRuta()
	{
		this._ObjCabeceraHojasDeRuta = default(EntityRef<CabeceraHojasDeRuta>);
		this._ObjPlantilla = default(EntityRef<Plantilla>);
		OnCreated();
	}
	
	[Column(Storage="_IdHojaDeRuta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdHojaDeRuta
	{
		get
		{
			return this._IdHojaDeRuta;
		}
		set
		{
			if ((this._IdHojaDeRuta != value))
			{
				this.OnIdHojaDeRutaChanging(value);
				this.SendPropertyChanging();
				this._IdHojaDeRuta = value;
				this.SendPropertyChanged("IdHojaDeRuta");
				this.OnIdHojaDeRutaChanged();
			}
		}
	}
	
	[Column(Storage="_IdCabeceraHojaDeRuta", DbType="Int NOT NULL")]
	public int IdCabeceraHojaDeRuta
	{
		get
		{
			return this._IdCabeceraHojaDeRuta;
		}
		set
		{
			if ((this._IdCabeceraHojaDeRuta != value))
			{
				if (this._ObjCabeceraHojasDeRuta.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdCabeceraHojaDeRutaChanging(value);
				this.SendPropertyChanging();
				this._IdCabeceraHojaDeRuta = value;
				this.SendPropertyChanged("IdCabeceraHojaDeRuta");
				this.OnIdCabeceraHojaDeRutaChanged();
			}
		}
	}
	
	[Column(Storage="_IdPlanilla", DbType="Int NOT NULL")]
	public long IdPlanilla
	{
		get
		{
			return this._IdPlanilla;
		}
		set
		{
			if ((this._IdPlanilla != value))
			{
				if (this._ObjPlantilla.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdPlanillaChanging(value);
				this.SendPropertyChanging();
				this._IdPlanilla = value;
				this.SendPropertyChanged("IdPlanilla");
				this.OnIdPlanillaChanged();
			}
		}
	}
	
	[Column(Storage="_HojaComentario", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string HojaComentario
	{
		get
		{
			return this._HojaComentario;
		}
		set
		{
			if ((this._HojaComentario != value))
			{
				this.OnHojaComentarioChanging(value);
				this.SendPropertyChanging();
				this._HojaComentario = value;
				this.SendPropertyChanged("HojaComentario");
				this.OnHojaComentarioChanged();
			}
		}
	}
	
	[Column(Storage="_HojaFechaControlado", DbType="DateTime")]
	public System.Nullable<System.DateTime> HojaFechaControlado
	{
		get
		{
			return this._HojaFechaControlado;
		}
		set
		{
			if ((this._HojaFechaControlado != value))
			{
				this.OnHojaFechaControladoChanging(value);
				this.SendPropertyChanging();
				this._HojaFechaControlado = value;
				this.SendPropertyChanged("HojaFechaControlado");
				this.OnHojaFechaControladoChanged();
			}
		}
	}
	
	[Column(Storage="_HojaAprobado", DbType="Bit")]
	public System.Nullable<bool> HojaAprobado
	{
		get
		{
			return this._HojaAprobado;
		}
		set
		{
			if ((this._HojaAprobado != value))
			{
				this.OnHojaAprobadoChanging(value);
				this.SendPropertyChanging();
				this._HojaAprobado = value;
				this.SendPropertyChanged("HojaAprobado");
				this.OnHojaAprobadoChanged();
			}
		}
	}
	
	[Column(Storage="_HojaFechaAprobacion", DbType="DateTime")]
	public System.Nullable<System.DateTime> HojaFechaAprobacion
	{
		get
		{
			return this._HojaFechaAprobacion;
		}
		set
		{
			if ((this._HojaFechaAprobacion != value))
			{
				this.OnHojaFechaAprobacionChanging(value);
				this.SendPropertyChanging();
				this._HojaFechaAprobacion = value;
				this.SendPropertyChanged("HojaFechaAprobacion");
				this.OnHojaFechaAprobacionChanged();
			}
		}
	}
	
	[Column(Storage="_DocComentario", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string DocComentario
	{
		get
		{
			return this._DocComentario;
		}
		set
		{
			if ((this._DocComentario != value))
			{
				this.OnDocComentarioChanging(value);
				this.SendPropertyChanging();
				this._DocComentario = value;
				this.SendPropertyChanged("DocComentario");
				this.OnDocComentarioChanged();
			}
		}
	}
	
	[Column(Storage="_DocFechaEntrega", DbType="DateTime")]
	public System.Nullable<System.DateTime> DocFechaEntrega
	{
		get
		{
			return this._DocFechaEntrega;
		}
		set
		{
			if ((this._DocFechaEntrega != value))
			{
				this.OnDocFechaEntregaChanging(value);
				this.SendPropertyChanging();
				this._DocFechaEntrega = value;
				this.SendPropertyChanged("DocFechaEntrega");
				this.OnDocFechaEntregaChanged();
			}
		}
	}
	
	[Column(Storage="_AuditadoPor", DbType="NVarChar(256)")]
	public string AuditadoPor
	{
		get
		{
			return this._AuditadoPor;
		}
		set
		{
			if ((this._AuditadoPor != value))
			{
				this.OnAuditadoPorChanging(value);
				this.SendPropertyChanging();
				this._AuditadoPor = value;
				this.SendPropertyChanged("AuditadoPor");
				this.OnAuditadoPorChanged();
			}
		}
	}
	
	[Association(Name="CabeceraHojasDeRuta_HojasDeRuta", Storage="_ObjCabeceraHojasDeRuta", ThisKey="IdCabeceraHojaDeRuta", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public CabeceraHojasDeRuta ObjCabeceraHojasDeRuta
	{
		get
		{
			return this._ObjCabeceraHojasDeRuta.Entity;
		}
		set
		{
			CabeceraHojasDeRuta previousValue = this._ObjCabeceraHojasDeRuta.Entity;
			if (((previousValue != value) 
						|| (this._ObjCabeceraHojasDeRuta.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ObjCabeceraHojasDeRuta.Entity = null;
					previousValue.ColHojasDeRutas.Remove(this);
				}
				this._ObjCabeceraHojasDeRuta.Entity = value;
				if ((value != null))
				{
					value.ColHojasDeRutas.Add(this);
					this._IdCabeceraHojaDeRuta = value.IdCabeceraHojasDeRuta;
				}
				else
				{
					this._IdCabeceraHojaDeRuta = default(int);
				}
				this.SendPropertyChanged("ObjCabeceraHojasDeRuta");
			}
		}
	}
	
	[Association(Name="Plantilla_HojasDeRuta", Storage="_ObjPlantilla", ThisKey="IdPlanilla", IsForeignKey=true)]
	public Plantilla ObjPlantilla
	{
		get
		{
			return this._ObjPlantilla.Entity;
		}
		set
		{
			Plantilla previousValue = this._ObjPlantilla.Entity;
			if (((previousValue != value) 
						|| (this._ObjPlantilla.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ObjPlantilla.Entity = null;
					previousValue.HojasDeRutas.Remove(this);
				}
				this._ObjPlantilla.Entity = value;
				if ((value != null))
				{
					value.HojasDeRutas.Add(this);
					this._IdPlanilla = value.IdPlantilla;
				}
				else
				{
					this._IdPlanilla = default(long);
				}
				this.SendPropertyChanged("ObjPlantilla");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Plantilla")]
public partial class Plantilla : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _IdPlantilla;
	
	private string _Descripcion;
	
	private string _Codigo;
	
	private System.Nullable<int> _IdCategoria;
	
	private EntitySet<RolesPlanilla> _RolesPlanillas;
	
	private EntitySet<HojasDeRuta> _HojasDeRutas;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPlantillaChanging(long value);
    partial void OnIdPlantillaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnIdCategoriaChanging(System.Nullable<int> value);
    partial void OnIdCategoriaChanged();
    #endregion
	
	public Plantilla()
	{
		this._RolesPlanillas = new EntitySet<RolesPlanilla>(new Action<RolesPlanilla>(this.attach_RolesPlanillas), new Action<RolesPlanilla>(this.detach_RolesPlanillas));
		this._HojasDeRutas = new EntitySet<HojasDeRuta>(new Action<HojasDeRuta>(this.attach_HojasDeRutas), new Action<HojasDeRuta>(this.detach_HojasDeRutas));
		OnCreated();
	}
	
	[Column(Storage="_IdPlantilla", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long IdPlantilla
	{
		get
		{
			return this._IdPlantilla;
		}
		set
		{
			if ((this._IdPlantilla != value))
			{
				this.OnIdPlantillaChanging(value);
				this.SendPropertyChanging();
				this._IdPlantilla = value;
				this.SendPropertyChanged("IdPlantilla");
				this.OnIdPlantillaChanged();
			}
		}
	}
	
	[Column(Storage="_Descripcion", DbType="VarChar(250)")]
	public string Descripcion
	{
		get
		{
			return this._Descripcion;
		}
		set
		{
			if ((this._Descripcion != value))
			{
				this.OnDescripcionChanging(value);
				this.SendPropertyChanging();
				this._Descripcion = value;
				this.SendPropertyChanged("Descripcion");
				this.OnDescripcionChanged();
			}
		}
	}
	
	[Column(Storage="_Codigo", DbType="NChar(10)")]
	public string Codigo
	{
		get
		{
			return this._Codigo;
		}
		set
		{
			if ((this._Codigo != value))
			{
				this.OnCodigoChanging(value);
				this.SendPropertyChanging();
				this._Codigo = value;
				this.SendPropertyChanged("Codigo");
				this.OnCodigoChanged();
			}
		}
	}
	
	[Column(Storage="_IdCategoria", DbType="Int")]
	public System.Nullable<int> IdCategoria
	{
		get
		{
			return this._IdCategoria;
		}
		set
		{
			if ((this._IdCategoria != value))
			{
				this.OnIdCategoriaChanging(value);
				this.SendPropertyChanging();
				this._IdCategoria = value;
				this.SendPropertyChanged("IdCategoria");
				this.OnIdCategoriaChanged();
			}
		}
	}
	
	[Association(Name="Plantilla_RolesPlanilla", Storage="_RolesPlanillas", OtherKey="IdPlanilla")]
	public EntitySet<RolesPlanilla> RolesPlanillas
	{
		get
		{
			return this._RolesPlanillas;
		}
		set
		{
			this._RolesPlanillas.Assign(value);
		}
	}
	
	[Association(Name="Plantilla_HojasDeRuta", Storage="_HojasDeRutas", OtherKey="IdPlanilla")]
	public EntitySet<HojasDeRuta> HojasDeRutas
	{
		get
		{
			return this._HojasDeRutas;
		}
		set
		{
			this._HojasDeRutas.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_RolesPlanillas(RolesPlanilla entity)
	{
		this.SendPropertyChanging();
		entity.Plantilla = this;
	}
	
	private void detach_RolesPlanillas(RolesPlanilla entity)
	{
		this.SendPropertyChanging();
		entity.Plantilla = null;
	}
	
	private void attach_HojasDeRutas(HojasDeRuta entity)
	{
		this.SendPropertyChanging();
		entity.ObjPlantilla = this;
	}
	
	private void detach_HojasDeRutas(HojasDeRuta entity)
	{
		this.SendPropertyChanging();
		entity.ObjPlantilla = null;
	}
}

[Table(Name="dbo.Clasificacion")]
public partial class Clasificacion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdClasificacion;
	
	private string _Descripcion;
	
	private System.Nullable<int> _IdPadre;
	
	private string _Codigo;
	
	private string _Tipo;
	
	private EntitySet<Contrato> _Contratos;
	
	private EntitySet<Contrato> _Contratos1;
	
	private EntitySet<CabeceraHojasDeRuta> _CabeceraHojasDeRutas;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClasificacionChanging(int value);
    partial void OnIdClasificacionChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnIdPadreChanging(System.Nullable<int> value);
    partial void OnIdPadreChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
	
	public Clasificacion()
	{
		this._Contratos = new EntitySet<Contrato>(new Action<Contrato>(this.attach_Contratos), new Action<Contrato>(this.detach_Contratos));
		this._Contratos1 = new EntitySet<Contrato>(new Action<Contrato>(this.attach_Contratos1), new Action<Contrato>(this.detach_Contratos1));
		this._CabeceraHojasDeRutas = new EntitySet<CabeceraHojasDeRuta>(new Action<CabeceraHojasDeRuta>(this.attach_CabeceraHojasDeRutas), new Action<CabeceraHojasDeRuta>(this.detach_CabeceraHojasDeRutas));
		OnCreated();
	}
	
	[Column(Storage="_IdClasificacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdClasificacion
	{
		get
		{
			return this._IdClasificacion;
		}
		set
		{
			if ((this._IdClasificacion != value))
			{
				this.OnIdClasificacionChanging(value);
				this.SendPropertyChanging();
				this._IdClasificacion = value;
				this.SendPropertyChanged("IdClasificacion");
				this.OnIdClasificacionChanged();
			}
		}
	}
	
	[Column(Storage="_Descripcion", DbType="VarChar(50)")]
	public string Descripcion
	{
		get
		{
			return this._Descripcion;
		}
		set
		{
			if ((this._Descripcion != value))
			{
				this.OnDescripcionChanging(value);
				this.SendPropertyChanging();
				this._Descripcion = value;
				this.SendPropertyChanged("Descripcion");
				this.OnDescripcionChanged();
			}
		}
	}
	
	[Column(Storage="_IdPadre", DbType="Int")]
	public System.Nullable<int> IdPadre
	{
		get
		{
			return this._IdPadre;
		}
		set
		{
			if ((this._IdPadre != value))
			{
				this.OnIdPadreChanging(value);
				this.SendPropertyChanging();
				this._IdPadre = value;
				this.SendPropertyChanged("IdPadre");
				this.OnIdPadreChanged();
			}
		}
	}
	
	[Column(Storage="_Codigo", DbType="VarChar(50)")]
	public string Codigo
	{
		get
		{
			return this._Codigo;
		}
		set
		{
			if ((this._Codigo != value))
			{
				this.OnCodigoChanging(value);
				this.SendPropertyChanging();
				this._Codigo = value;
				this.SendPropertyChanged("Codigo");
				this.OnCodigoChanged();
			}
		}
	}
	
	[Column(Storage="_Tipo", DbType="VarChar(50)")]
	public string Tipo
	{
		get
		{
			return this._Tipo;
		}
		set
		{
			if ((this._Tipo != value))
			{
				this.OnTipoChanging(value);
				this.SendPropertyChanging();
				this._Tipo = value;
				this.SendPropertyChanged("Tipo");
				this.OnTipoChanged();
			}
		}
	}
	
	[Association(Name="Clasificacion_Contrato", Storage="_Contratos", OtherKey="TipoContrato")]
	public EntitySet<Contrato> Contratos
	{
		get
		{
			return this._Contratos;
		}
		set
		{
			this._Contratos.Assign(value);
		}
	}
	
	[Association(Name="Clasificacion_Contrato1", Storage="_Contratos1", OtherKey="Contratadopor")]
	public EntitySet<Contrato> Contratos1
	{
		get
		{
			return this._Contratos1;
		}
		set
		{
			this._Contratos1.Assign(value);
		}
	}
	
	[Association(Name="Clasificacion_CabeceraHojasDeRuta", Storage="_CabeceraHojasDeRutas", OtherKey="IdEstado")]
	public EntitySet<CabeceraHojasDeRuta> CabeceraHojasDeRutas
	{
		get
		{
			return this._CabeceraHojasDeRutas;
		}
		set
		{
			this._CabeceraHojasDeRutas.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Contratos(Contrato entity)
	{
		this.SendPropertyChanging();
		entity.Clasificacion = this;
	}
	
	private void detach_Contratos(Contrato entity)
	{
		this.SendPropertyChanging();
		entity.Clasificacion = null;
	}
	
	private void attach_Contratos1(Contrato entity)
	{
		this.SendPropertyChanging();
		entity.Clasificacion1 = this;
	}
	
	private void detach_Contratos1(Contrato entity)
	{
		this.SendPropertyChanging();
		entity.Clasificacion1 = null;
	}
	
	private void attach_CabeceraHojasDeRutas(CabeceraHojasDeRuta entity)
	{
		this.SendPropertyChanging();
		entity.ObjEstado = this;
	}
	
	private void detach_CabeceraHojasDeRutas(CabeceraHojasDeRuta entity)
	{
		this.SendPropertyChanging();
		entity.ObjEstado = null;
	}
}
#pragma warning restore 1591
