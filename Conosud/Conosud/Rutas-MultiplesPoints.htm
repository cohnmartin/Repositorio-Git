<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Google Maps JavaScript API v3 Example: Directions Waypoints</title>
    <style>
        #map
        {
            width: 100%;
            height: 800px;
        }
    </style>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script>
        jQuery(function () {
            // Recorrido de las heras -  ciudad
            var stops = [
                { "Geometry": { "Latitude": -32.865331859698465,"Longitude": -68.81473302841186} },{ "Geometry": { "Latitude": -32.86495336881917,"Longitude": -68.81617069244385} },{ "Geometry": { "Latitude": -32.86320508046163,"Longitude": -68.81535530090332} },{ "Geometry": { "Latitude": -32.8629166996894,"Longitude": -68.8170075416565} },{ "Geometry": { "Latitude": -32.86223179159733,"Longitude": -68.81694316864013} },{ "Geometry": { "Latitude": -32.86169107094653,"Longitude": -68.81685733795166} },{ "Geometry": { "Latitude": -32.861132322810945,"Longitude": -68.81685733795166} },{ "Geometry": { "Latitude": -32.8606276440502,"Longitude": -68.81670713424682} },{ "Geometry": { "Latitude": -32.85988864496972,"Longitude": -68.8166856765747} },{ "Geometry": { "Latitude": -32.860104938020825,"Longitude": -68.81617069244385} },{ "Geometry": { "Latitude": -32.85723901229124,"Longitude": -68.8152265548706} },{ "Geometry": { "Latitude": -32.856355783811104,"Longitude": -68.8149905204773} },{ "Geometry": { "Latitude": -32.85556267319282,"Longitude": -68.81469011306762} },{ "Geometry": { "Latitude": -32.85482363191682,"Longitude": -68.81449699401855} },{ "Geometry": { "Latitude": -32.85246226365374,"Longitude": -68.81389617919922} },{ "Geometry": { "Latitude": -32.85008280611054,"Longitude": -68.81359577178955} },{ "Geometry": { "Latitude": -32.85008280611054,"Longitude": -68.81434679031372} },{ "Geometry": { "Latitude": -32.84860462611187,"Longitude": -68.81389617919922} },{ "Geometry": { "Latitude": -32.84811790291882,"Longitude": -68.81372451782226} },{ "Geometry": { "Latitude": -32.84671179869893,"Longitude": -68.813316822052} },{ "Geometry": { "Latitude": -32.8452876447929,"Longitude": -68.81293058395386} },{ "Geometry": { "Latitude": -32.84442232492939,"Longitude": -68.81260871887207} },{ "Geometry": { "Latitude": -32.84389952342353,"Longitude": -68.81243705749512} },{ "Geometry": { "Latitude": -32.84334066323605,"Longitude": -68.81226539611816} },{ "Geometry": { "Latitude": -32.8422950444023,"Longitude": -68.81192207336426} },
                { "Geometry": { "Latitude": -32.84227701638336, "Longitude": -68.81190061569214} }, { "Geometry": { "Latitude": -32.84231307241758, "Longitude": -68.81385326385498} }, { "Geometry": { "Latitude": -32.84222293230456, "Longitude": -68.81469011306762} }, { "Geometry": { "Latitude": -32.84222293230456, "Longitude": -68.81550550460815} }, { "Geometry": { "Latitude": -32.84225898836075, "Longitude": -68.81621360778808} }, { "Geometry": { "Latitude": -32.842168848192806, "Longitude": -68.81949663162231} }, { "Geometry": { "Latitude": -32.842006595659804, "Longitude": -68.8207197189331} }, { "Geometry": { "Latitude": -32.84202462373367, "Longitude": -68.82232904434204} }, { "Geometry": { "Latitude": -32.84215082014822, "Longitude": -68.82327318191528} }, { "Geometry": { "Latitude": -32.842078707933304, "Longitude": -68.82404565811157} }, { "Geometry": { "Latitude": -32.842168848192806, "Longitude": -68.82498979568481} }, { "Geometry": { "Latitude": -32.842168848192806, "Longitude": -68.82659912109375} }, { "Geometry": { "Latitude": -32.84198856758227, "Longitude": -68.83065462112427} }, { "Geometry": { "Latitude": -32.84321446851316, "Longitude": -68.83076190948486} }, { "Geometry": { "Latitude": -32.8432324963417, "Longitude": -68.83177042007446} }, { "Geometry": { "Latitude": -32.84341277442572, "Longitude": -68.83284330368042} }, { "Geometry": { "Latitude": -32.84519750770075, "Longitude": -68.83288621902466} }, { "Geometry": { "Latitude": -32.847577096240045, "Longitude": -68.83301496505737} }, { "Geometry": { "Latitude": -32.84829817107936, "Longitude": -68.83310079574585} }, { "Geometry": { "Latitude": -32.849145426528715, "Longitude": -68.83310079574585} }, { "Geometry": { "Latitude": -32.85037122860512, "Longitude": -68.83318662643432} }, { "Geometry": { "Latitude": -32.851831353097374, "Longitude": -68.83322954177856} }, { "Geometry": { "Latitude": -32.85390432807931, "Longitude": -68.8333797454834} }, { "Geometry": { "Latitude": -32.85588712839366, "Longitude": -68.83318662643432} },
                { "Geometry": { "Latitude": -32.85588712839366,"Longitude": -68.83232831954956} },{ "Geometry": { "Latitude": -32.855941204145104,"Longitude": -68.83149147033691} },{ "Geometry": { "Latitude": -32.855941204145104,"Longitude": -68.83086919784546} },{ "Geometry": { "Latitude": -32.855851077874384,"Longitude": -68.83016109466553} },{ "Geometry": { "Latitude": -32.85689653698559,"Longitude": -68.83009672164917} },{ "Geometry": { "Latitude": -32.857887909244496,"Longitude": -68.83007526397705} },{ "Geometry": { "Latitude": -32.858753097798584,"Longitude": -68.83033275604248} },{ "Geometry": { "Latitude": -32.85972642483528,"Longitude": -68.83020401000976} },{ "Geometry": { "Latitude": -32.86082591104867,"Longitude": -68.83003234863281} },{ "Geometry": { "Latitude": -32.860879983789516,"Longitude": -68.82919549942016} },{ "Geometry": { "Latitude": -32.86104220181427,"Longitude": -68.8277792930603} },
                { "Geometry": { "Latitude": -32.86235795927485, "Longitude": -68.82803678512573} }, { "Geometry": { "Latitude": -32.86297077115561, "Longitude": -68.8282299041748} }, { "Geometry": { "Latitude": -32.86361962617895, "Longitude": -68.8283371925354} }, { "Geometry": { "Latitude": -32.86446673531507, "Longitude": -68.82850885391235} }, { "Geometry": { "Latitude": -32.865295813017646, "Longitude": -68.82870197296142} }, { "Geometry": { "Latitude": -32.865205696251515, "Longitude": -68.82994651794433} }, { "Geometry": { "Latitude": -32.8650434858417, "Longitude": -68.83116960525512} }, { "Geometry": { "Latitude": -32.864863251705046, "Longitude": -68.83241415023804} }, { "Geometry": { "Latitude": -32.864863251705046, "Longitude": -68.83404493331909} }, { "Geometry": { "Latitude": -32.86491732198451, "Longitude": -68.835289478302} }, { "Geometry": { "Latitude": -32.864701040668876, "Longitude": -68.83668422698974} }, { "Geometry": { "Latitude": -32.866196975642495, "Longitude": -68.83702754974365} }, { "Geometry": { "Latitude": -32.86708010613028, "Longitude": -68.83728504180908} }, { "Geometry": { "Latitude": -32.867782999620545, "Longitude": -68.83739233016968} }, { "Geometry": { "Latitude": -32.86798125062328, "Longitude": -68.83612632751465} }, { "Geometry": { "Latitude": -32.868179501182766, "Longitude": -68.83488178253174} }, { "Geometry": { "Latitude": -32.868431819435635, "Longitude": -68.83352994918823} }, { "Geometry": { "Latitude": -32.86848588753927, "Longitude": -68.83277893066406} }, { "Geometry": { "Latitude": -32.86855797829283, "Longitude": -68.8319206237793} },
                { "Geometry": { "Latitude": -32.869819556992645,"Longitude": -68.83198499679565} },{ "Geometry": { "Latitude": -32.87091891808053,"Longitude": -68.83198499679565} },{ "Geometry": { "Latitude": -32.871856067589555,"Longitude": -68.83204936981201} },{ "Geometry": { "Latitude": -32.873009468771706,"Longitude": -68.83217811584472} },{ "Geometry": { "Latitude": -32.87308155584738,"Longitude": -68.83063316345215} },{ "Geometry": { "Latitude": -32.87309957760713,"Longitude": -68.83067607879638} },{ "Geometry": { "Latitude": -32.87324375155332,"Longitude": -68.82919549942016} },{ "Geometry": { "Latitude": -32.8732978167227,"Longitude": -68.8276720046997} },{ "Geometry": { "Latitude": -32.87344199034651,"Longitude": -68.82608413696289} },{ "Geometry": { "Latitude": -32.87443317766336,"Longitude": -68.82623434066772} },{ "Geometry": { "Latitude": -32.874397134682354,"Longitude": -68.82784366607666} },{ "Geometry": { "Latitude": -32.87423494108654,"Longitude": -68.82921695709228} },{ "Geometry": { "Latitude": -32.87419889802494,"Longitude": -68.83067607879638} },{ "Geometry": { "Latitude": -32.87403670406644,"Longitude": -68.83211374282837} },{ "Geometry": { "Latitude": -32.87538831132026,"Longitude": -68.83224248886108} },{ "Geometry": { "Latitude": -32.8754063326111,"Longitude": -68.83219957351684} },{ "Geometry": { "Latitude": -32.87663177179349,"Longitude": -68.8322639465332} },{ "Geometry": { "Latitude": -32.87778511084317,"Longitude": -68.8322639465332} },{ "Geometry": { "Latitude": -32.87893843488655,"Longitude": -68.83232831954956} },{ "Geometry": { "Latitude": -32.88016382523992,"Longitude": -68.83232831954956} },{ "Geometry": { "Latitude": -32.88133513841748,"Longitude": -68.83234977722168} },{ "Geometry": { "Latitude": -32.882668614576445,"Longitude": -68.83241415023804} },{ "Geometry": { "Latitude": -32.88412820737179,"Longitude": -68.83234977722168} },{ "Geometry": { "Latitude": -32.88497512056506,"Longitude": -68.83252143859863} },{ "Geometry": { "Latitude": -32.88620042745436,"Longitude": -68.83265018463135} },{ "Geometry": { "Latitude": -32.88778609357227,"Longitude": -68.83275747299194} },{ "Geometry": { "Latitude": -32.88890325038949,"Longitude": -68.83275747299194} },{ "Geometry": { "Latitude": -32.89014652125437,"Longitude": -68.8327145576477} },{ "Geometry": { "Latitude": -32.89003841143693,"Longitude": -68.83419513702392} },{ "Geometry": { "Latitude": -32.8898942648085,"Longitude": -68.83561134338379} },{ "Geometry": { "Latitude": -32.88987624646345,"Longitude": -68.83707046508789} },{ "Geometry": { "Latitude": -32.88967804442611,"Longitude": -68.83900165557861} },{ "Geometry": { "Latitude": -32.890723104719406,"Longitude": -68.83930206298828} },{ "Geometry": { "Latitude": -32.89185824245049,"Longitude": -68.8396668434143} },{ "Geometry": { "Latitude": -32.89306543645976,"Longitude": -68.83994579315185} },{ "Geometry": { "Latitude": -32.89391226423111,"Longitude": -68.84024620056152} },{ "Geometry": { "Latitude": -32.89589416992459,"Longitude": -68.84076118469238} },{ "Geometry": { "Latitude": -32.8966869197861,"Longitude": -68.84106159210205} },{ "Geometry": { "Latitude": -32.89857868056082,"Longitude": -68.84153366088867} },{ "Geometry": { "Latitude": -32.899425455626385,"Longitude": -68.84174823760986} },{ "Geometry": { "Latitude": -32.89938942280979,"Longitude": -68.83996725082397} },{ "Geometry": { "Latitude": -32.8996416522181,"Longitude": -68.83762836456299} }
             ];

            var batches = [];
            var map = new window.google.maps.Map(document.getElementById("map"));

            google.maps.event.addListener(map, 'click', function (event) {
                event.latLng;
                document.getElementById("puntos").innerHTML = document.getElementById("puntos").innerHTML + '{ "Geometry": { "Latitude": ' + event.latLng.lat() + ', "Longitude": ' + event.latLng.lng() + '} },'
            });

            // new up complex objects before passing them around
            var directionsDisplay = new window.google.maps.DirectionsRenderer({ suppressMarkers: true });
            var directionsService = new window.google.maps.DirectionsService();
            var combinedResults;
            var unsortedResults = [{}]; // to hold the counter and the results themselves as they come back, to later sort

            Tour_startUp(stops);

            window.tour.loadMap(map, directionsDisplay);
            window.tour.fitBounds(map);

            if (stops.length > 1)
                window.tour.calcRoute(directionsService, directionsDisplay, batches);

            var cant = 0;
            var aa = window.setInterval(function () {
                var porsion = batches.slice(cant, cant + 5);
                if (porsion.length > 0) {
                    calculo(directionsService, directionsDisplay, porsion, unsortedResults);
                    cant += 5;
                }
                else {
                    window.clearInterval(aa);
                    dibujar(unsortedResults, directionsDisplay, combinedResults, stops);
                }

            }, 3000);

        });

        function dibujar(unsortedResults, directionsDisplay, combinedResults, stops) {

                // sort the returned values into their correct order
                unsortedResults.sort(function (a, b) { return parseFloat(a.order) - parseFloat(b.order); });
                var count = 0;
                for (var key in unsortedResults) {
                    if (unsortedResults[key].result != null) {
                        if (unsortedResults.hasOwnProperty(key)) {
                            if (count == 0) // first results. new up the combinedResults object
                                combinedResults = unsortedResults[key].result;
                            else {
                                // only building up legs, overview_path, and bounds in my consolidated object. This is not a complete
                                // directionResults object, but enough to draw a path on the map, which is all I need
                                combinedResults.routes[0].legs = combinedResults.routes[0].legs.concat(unsortedResults[key].result.routes[0].legs);
                                combinedResults.routes[0].overview_path = combinedResults.routes[0].overview_path.concat(unsortedResults[key].result.routes[0].overview_path);

                                combinedResults.routes[0].bounds = combinedResults.routes[0].bounds.extend(unsortedResults[key].result.routes[0].bounds.getNorthEast());
                                combinedResults.routes[0].bounds = combinedResults.routes[0].bounds.extend(unsortedResults[key].result.routes[0].bounds.getSouthWest());
                            }
                            count++;
                        }
                    }
                }
                directionsDisplay.setDirections(combinedResults);
                var legs = combinedResults.routes[0].legs;
                // alert(legs.length);
                for (var i = 0; i < legs.length; i++) {
                    var markerletter = "A".charCodeAt(0);
                    markerletter += i;
                    markerletter = String.fromCharCode(markerletter);
                    if (i==0)
                    createMarker(directionsDisplay.getMap(), legs[i].start_location, "marker" + i, "some text for marker " + i + "<br>" + legs[i].start_address, markerletter);
                }
                var i = legs.length;
                var markerletter = "A".charCodeAt(0);
                markerletter += i;
                markerletter = String.fromCharCode(markerletter);

                var val = stops[stops.length - 1];
                var fin = new window.google.maps.LatLng(val.Geometry.Latitude, val.Geometry.Longitude)

                createMarker(directionsDisplay.getMap(), fin, "marker" + i, "some text for the " + i + "marker<br>" + legs[legs.length - 1].end_address, markerletter);
                createMarker(directionsDisplay.getMap(), new google.maps.LatLng(-32.882045, -68.816157), "marker" + i, "Ubicación de Partida" + i + "marker<br>", "star");

        }

        function calculo(directionsService, directionsDisplay, batches, unsortedResults) {

          
            var directionsResultsReturned = 0;


            for (var k = 0; k < batches.length; k++) {
                var lastIndex = batches[k].length - 1;
                var start = batches[k][0].location;
                var end = batches[k][lastIndex].location;

                // trim first and last entry from array
                var waypts = [];
                waypts = batches[k];
                waypts.splice(0, 1);
                waypts.splice(waypts.length - 1, 1);

                var request = {
                    origin: start,
                    destination: end,
                    waypoints: waypts,
                    travelMode: window.google.maps.TravelMode.WALKING
                };



                (function (kk) {
                    directionsService.route(request, function (result, status) {
                        if (status == window.google.maps.DirectionsStatus.OK) {

                            var unsortedResult = { order: kk, result: result };
                            unsortedResults.push(unsortedResult);

                            directionsResultsReturned++;


                        }
                        else {
                            var aa = 11;
                        }
                    });
                })(k);
            }
        }

        function Tour_startUp(stops) {
            if (!window.tour) window.tour = {
                updateStops: function (newStops) {
                    stops = newStops;
                },
                // map: google map object
                // directionsDisplay: google directionsDisplay object (comes in empty)
                loadMap: function (map, directionsDisplay) {
                    var myOptions = {
                        zoom: 15,
                        center: new window.google.maps.LatLng(-32.9083941, -68.8258018), // default to London
                        mapTypeId: window.google.maps.MapTypeId.ROADMAP
                    };
                    map.setOptions(myOptions);
                    directionsDisplay.setMap(map);
                },
                fitBounds: function (map) {
                    var bounds = new window.google.maps.LatLngBounds();

                    // extend bounds for each record
                    jQuery.each(stops, function (key, val) {
                        var myLatlng = new window.google.maps.LatLng(val.Geometry.Latitude, val.Geometry.Longitude);
                        bounds.extend(myLatlng);
                    });
                    map.fitBounds(bounds);
                },
                calcRoute: function (directionsService, directionsDisplay, batches) {
                    //var batches = [];
                    var itemsPerBatch = 10; // google API max = 10 - 1 start, 1 stop, and 8 waypoints
                    var itemsCounter = 0;
                    var wayptsExist = stops.length > 0;

                    while (wayptsExist) {
                        var subBatch = [];
                        var subitemsCounter = 0;

                        for (var j = itemsCounter; j < stops.length; j++) {
                            subitemsCounter++;
                            subBatch.push({
                                location: new window.google.maps.LatLng(stops[j].Geometry.Latitude, stops[j].Geometry.Longitude),
                                stopover: true
                            });
                            if (subitemsCounter == itemsPerBatch)
                                break;
                        }

                        itemsCounter += subitemsCounter;
                        batches.push(subBatch);
                        wayptsExist = itemsCounter < stops.length;
                        // If it runs again there are still points. Minus 1 before continuing to
                        // start up with end of previous tour leg
                        itemsCounter--;
                    }

                    return;
                    // now we should have a 2 dimensional array with a list of a list of waypoints

                }
            };
        }

        var infowindow = new google.maps.InfoWindow(
        {
            size: new google.maps.Size(150, 50)
        });

        var icons = new Array();
        icons["red"] = new google.maps.MarkerImage("mapIcons/marker_red.png",
        // This marker is 20 pixels wide by 34 pixels tall.
      new google.maps.Size(20, 34),
        // The origin for this image is 0,0.
      new google.maps.Point(0, 0),
        // The anchor for this image is at 9,34.
      new google.maps.Point(9, 34));



        function getMarkerImage(iconStr) {
            if ((typeof (iconStr) == "undefined") || (iconStr == null)) {
                iconStr = "red";
            }
            if (!icons[iconStr]) {
                //icons[iconStr] = new google.maps.MarkerImage("http://www.google.com/mapfiles/marker" + iconStr + ".png",
                // This marker is 20 pixels wide by 34 pixels tall.
                //new google.maps.Size(20, 34),
                // The origin for this image is 0,0.
                //new google.maps.Point(0, 0),
                // The anchor for this image is at 6,20.
                //new google.maps.Point(9, 34));

                icons[iconStr] = new google.maps.MarkerImage("http://maps.google.com/mapfiles/ms/icons/purple-dot.png");

            }

            if (iconStr == "star") {
                icons[iconStr] = new google.maps.MarkerImage("http://maps.google.com/mapfiles/ms/icons/green-dot.png");
            }

            return icons[iconStr];

        }
        // Marker sizes are expressed as a Size of X,Y
        // where the origin of the image (0,0) is located
        // in the top left of the image.

        // Origins, anchor positions and coordinates of the marker
        // increase in the X direction to the right and in
        // the Y direction down.

        var iconImage = new google.maps.MarkerImage('mapIcons/marker_red.png',
        // This marker is 20 pixels wide by 34 pixels tall.
      new google.maps.Size(20, 34),
        // The origin for this image is 0,0.
      new google.maps.Point(0, 0),
        // The anchor for this image is at 9,34.
      new google.maps.Point(9, 34));
        var iconShadow = new google.maps.MarkerImage('http://www.google.com/mapfiles/shadow50.png',
        // The shadow image is larger in the horizontal dimension
        // while the position and offset are the same as for the main image.
      new google.maps.Size(37, 34),
      new google.maps.Point(0, 0),
      new google.maps.Point(9, 34));
        // Shapes define the clickable region of the icon.
        // The type defines an HTML &lt;area&gt; element 'poly' which
        // traces out a polygon as a series of X,Y points. The final
        // coordinate closes the poly by connecting to the first
        // coordinate.
        var iconShape = {
            coord: [9, 0, 6, 1, 4, 2, 2, 4, 0, 8, 0, 12, 1, 14, 2, 16, 5, 19, 7, 23, 8, 26, 9, 30, 9, 34, 11, 34, 11, 30, 12, 26, 13, 24, 14, 21, 16, 18, 18, 16, 20, 12, 20, 8, 18, 4, 16, 2, 15, 1, 13, 0],
            type: 'poly'
        };




        function createMarker(map, latlng, label, html, color) {
            // alert("createMarker("+latlng+","+label+","+html+","+color+")");
            var contentString = '<b>' + label + '</b><br>' + html;
            var marker = new google.maps.Marker({
                position: latlng,
                map: map,
                shadow: iconShadow,
                icon: getMarkerImage(color),
                shape: iconShape,
                title: label,
                zIndex: Math.round(latlng.lat() * -100000) << 5
            });
            marker.myname = label;

            google.maps.event.addListener(marker, 'click', function () {
                infowindow.setContent(contentString);
                infowindow.open(map, marker);
            });
            return marker;
        }
    </script>
</head>
<body>
    <div id="puntos">
    </div>
    <div id="map">
    </div>
    <script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
    </script>
    <script type="text/javascript">
        _uacct = "UA-162157-1";
        urchinTracker();
    </script>
</body>
</html>
